name: "Build"

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'

env:
  APP_PUBLISH_PATH: './published'
  PROJECT_PATH: ./src
  NETCORE_VERSION: '3.1.x'                    # set this to the .NET Core version to use
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
  DOTNET_ADD_GLOBAL_TOOLS_TO_PATH: false
  DOTNET_MULTILEVEL_LOOKUP: 0
  DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: 1

jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup .NET Core SDK ${{ env.NETCORE_VERSION }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.NETCORE_VERSION }}
    
    - name: Restore packages
      run: dotnet restore ${{ env.PROJECT_PATH }}

    - name: Build app
      run: dotnet build ${{ env.PROJECT_PATH }} -c Release --no-restore

    - name: Create package
      run: dotnet pack ${{ env.PROJECT_PATH }} -c Release -o ${{ env.APP_PUBLISH_PATH }}

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2
      with:
        nuget-api-key: ${{ secrets.GHA_STRAVA_NET }}
        nuget-version: latest

    - name: Get certificate
      id: cert_file
      uses: timheuer/base64-to-file@master
      with:
          fileName: 'certfile.pfx'
          encodedString: ${{ secrets.SIGNING_CERT }}

    # Sign the package
    - name: Sign NuGet Package
      run: nuget sign "**/*.nupkg" -CertificatePath ${{ steps.cert_file.outputs.filePath }} -CertificatePassword "${{ secrets.CERT_PWD }}" -Timestamper http://timestamp.digicert.com -NonInteractive

    - name: Publish NuGet package
      run: dotnet nuget push "**/*.nupkg" -k ${{ secrets.GHA_STRAVA_NET }} -s https://api.nuget.org/v3/index.json

    - name: Publish Artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: nuget_package
        path: ${{ env.APP_PUBLISH_PATH }}